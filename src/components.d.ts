/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';
import {
  IComment,
} from './global/types';
import {
  MatchResults,
  RouterHistory,
} from '@stencil/router';


export namespace Components {

  interface AppComment {
    'comment': IComment;
  }
  interface AppCommentAttributes extends StencilHTMLAttributes {
    'comment': IComment;
  }

  interface AppComments {
    'comments': number[];
    'indent': boolean;
  }
  interface AppCommentsAttributes extends StencilHTMLAttributes {
    'comments': number[];
    'indent'?: boolean;
  }

  interface AppHeader {}
  interface AppHeaderAttributes extends StencilHTMLAttributes {}

  interface AppItem {
    'match': MatchResults;
  }
  interface AppItemAttributes extends StencilHTMLAttributes {
    'match'?: MatchResults;
  }

  interface AppListNav {
    'max': number;
    'page': number;
  }
  interface AppListNavAttributes extends StencilHTMLAttributes {
    'max': number;
    'onPageDecrement'?: (event: CustomEvent) => void;
    'onPageIncrement'?: (event: CustomEvent) => void;
    'page': number;
  }

  interface AppRoot {}
  interface AppRootAttributes extends StencilHTMLAttributes {}

  interface AppStories {
    'history': RouterHistory;
    'match': MatchResults;
  }
  interface AppStoriesAttributes extends StencilHTMLAttributes {
    'history'?: RouterHistory;
    'match'?: MatchResults;
  }

  interface AppStory {
    'storyId': number;
  }
  interface AppStoryAttributes extends StencilHTMLAttributes {
    'storyId': number;
  }

  interface AppUser {
    'match': MatchResults;
  }
  interface AppUserAttributes extends StencilHTMLAttributes {
    'match'?: MatchResults;
  }
}

declare global {
  interface StencilElementInterfaces {
    'AppComment': Components.AppComment;
    'AppComments': Components.AppComments;
    'AppHeader': Components.AppHeader;
    'AppItem': Components.AppItem;
    'AppListNav': Components.AppListNav;
    'AppRoot': Components.AppRoot;
    'AppStories': Components.AppStories;
    'AppStory': Components.AppStory;
    'AppUser': Components.AppUser;
  }

  interface StencilIntrinsicElements {
    'app-comment': Components.AppCommentAttributes;
    'app-comments': Components.AppCommentsAttributes;
    'app-header': Components.AppHeaderAttributes;
    'app-item': Components.AppItemAttributes;
    'app-list-nav': Components.AppListNavAttributes;
    'app-root': Components.AppRootAttributes;
    'app-stories': Components.AppStoriesAttributes;
    'app-story': Components.AppStoryAttributes;
    'app-user': Components.AppUserAttributes;
  }


  interface HTMLAppCommentElement extends Components.AppComment, HTMLStencilElement {}
  var HTMLAppCommentElement: {
    prototype: HTMLAppCommentElement;
    new (): HTMLAppCommentElement;
  };

  interface HTMLAppCommentsElement extends Components.AppComments, HTMLStencilElement {}
  var HTMLAppCommentsElement: {
    prototype: HTMLAppCommentsElement;
    new (): HTMLAppCommentsElement;
  };

  interface HTMLAppHeaderElement extends Components.AppHeader, HTMLStencilElement {}
  var HTMLAppHeaderElement: {
    prototype: HTMLAppHeaderElement;
    new (): HTMLAppHeaderElement;
  };

  interface HTMLAppItemElement extends Components.AppItem, HTMLStencilElement {}
  var HTMLAppItemElement: {
    prototype: HTMLAppItemElement;
    new (): HTMLAppItemElement;
  };

  interface HTMLAppListNavElement extends Components.AppListNav, HTMLStencilElement {}
  var HTMLAppListNavElement: {
    prototype: HTMLAppListNavElement;
    new (): HTMLAppListNavElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLAppStoriesElement extends Components.AppStories, HTMLStencilElement {}
  var HTMLAppStoriesElement: {
    prototype: HTMLAppStoriesElement;
    new (): HTMLAppStoriesElement;
  };

  interface HTMLAppStoryElement extends Components.AppStory, HTMLStencilElement {}
  var HTMLAppStoryElement: {
    prototype: HTMLAppStoryElement;
    new (): HTMLAppStoryElement;
  };

  interface HTMLAppUserElement extends Components.AppUser, HTMLStencilElement {}
  var HTMLAppUserElement: {
    prototype: HTMLAppUserElement;
    new (): HTMLAppUserElement;
  };

  interface HTMLElementTagNameMap {
    'app-comment': HTMLAppCommentElement
    'app-comments': HTMLAppCommentsElement
    'app-header': HTMLAppHeaderElement
    'app-item': HTMLAppItemElement
    'app-list-nav': HTMLAppListNavElement
    'app-root': HTMLAppRootElement
    'app-stories': HTMLAppStoriesElement
    'app-story': HTMLAppStoryElement
    'app-user': HTMLAppUserElement
  }

  interface ElementTagNameMap {
    'app-comment': HTMLAppCommentElement;
    'app-comments': HTMLAppCommentsElement;
    'app-header': HTMLAppHeaderElement;
    'app-item': HTMLAppItemElement;
    'app-list-nav': HTMLAppListNavElement;
    'app-root': HTMLAppRootElement;
    'app-stories': HTMLAppStoriesElement;
    'app-story': HTMLAppStoryElement;
    'app-user': HTMLAppUserElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
